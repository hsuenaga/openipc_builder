#
# backport Kconfig
#
# Some options are user-selectable ("BPAUTO_USERSEL_*")
#
# Most options, however, follow a few different schemes:
#
# A) An option that is selected by drivers ("select FOO") will be
#    changed to "select BPAUTO_FOO" (if the option BPAUTO_FOO
#    exists). The option BPAUTO_FOO then controls setting of the
#    BPAUTO_BUILD_FOO option, which is a module, like this:
#
# config BPAUTO_BUILD_FOO
#	tristate
#	# or bool
#
#	# not possible on kernel < X.Y, build will fail if any
#	# drivers are allowed to build on kernels < X.Y
#	depends on KERNEL_X_Y
#
#	# don't build the backport code if FOO is in the kernel
#	# already, but only if the kernel version is also >= X.Z;
#	# this is an example of backporting where the version of
#	# the FOO subsystem that we need is only available from
#	# kernel version X.Z
#	depends on !FOO || KERNEL_X_Z
#
#	# build if driver needs it (it selects BPAUTO_FOO)
#	default m if BPAUTO_FOO
#
#	# or for build-testing (BPAUTO_USERSEL_BUILD_ALL is enabled)
#	default m if BACKPORT_BPAUTO_USERSEL_BUILD_ALL
#
# config BPAUTO_FOO
#	bool
#
# This only works as-is if the kernel code is usable on any version,
# otherwise the "&& !FOO" part needs to be different.
#
#
# B) An option for code always present on some kernels (e.g. KFIFO).
#    This simply depends on/sets the default based on the version:
#
# config BPAUTO_BUILD_KFIFO
#	def_bool y
#	depends on KERNEL_2_6_36
#
#
# C) similarly, a kconfig symbol for an option, e.g.
#    BPAUTO_OPTION_SOME_FIX (no examples provided) check git log
#
#
# Variations are obviously possible.
#

config BACKPORT_BP_MODULES
	#option modules
	depends on !BP_MODULES
	bool
	default MODULES

	help
	This symbol is necessary for the newer kconf tool, it looks
	for the "option modules" to control the 'm' state.

config BACKPORT_BPAUTO_BUILD_NLATTR
	def_bool y
	depends on !BPAUTO_BUILD_NLATTR
	depends on KERNEL_5_2
	#c-file lib/nlattr.c

config BACKPORT_BPAUTO_USERSEL_BUILD_ALL
	bool "Build all compat code"
	depends on !BPAUTO_USERSEL_BUILD_ALL
	help
	  This option selects all the compat code options
	  that would otherwise only be selected by drivers.

	  It's only really useful for compat testing, so
	  you probably shouldn't enable it.

config BACKPORT_BPAUTO_WANT_DEV_COREDUMP
	bool
	depends on !BPAUTO_WANT_DEV_COREDUMP

config BACKPORT_BPAUTO_RHASHTABLE
	bool
	depends on !BPAUTO_RHASHTABLE
	# current API of rhashtable was introduced in version 4.9
	# (the one including rhltable)
	depends on KERNEL_4_9
	# not very nice - but better than always having it
	default y if BACKPORTED_MAC80211
	#h-file linux/rhashtable.h
	#h-file linux/rhashtable-types.h
	#c-file lib/rhashtable.c

config BACKPORT_BPAUTO_BUCKET_LOCKS
	bool
	depends on !BPAUTO_BUCKET_LOCKS
	# the API of bucket_locks that we need was introduced in version 4.16
	depends on KERNEL_4_16
	default y if BACKPORT_BPAUTO_RHASHTABLE
	#c-file lib/bucket_locks.c

config BACKPORT_BPAUTO_REFCOUNT
	bool
	depends on !BPAUTO_REFCOUNT
	default y
	depends on KERNEL_4_11
	#h-file linux/refcount.h
	#c-file lib/refcount.c

config BACKPORT_BPAUTO_SYSTEM_DATA_VERIFICATION
	bool
	depends on !BPAUTO_SYSTEM_DATA_VERIFICATION

config BACKPORT_BPAUTO_BUILD_SYSTEM_DATA_VERIFICATION
	bool
	depends on !BPAUTO_BUILD_SYSTEM_DATA_VERIFICATION
	default y if BACKPORT_BPAUTO_SYSTEM_DATA_VERIFICATION
	depends on (KERNEL_4_7 || !SYSTEM_DATA_VERIFICATION) && CRYPTO_HASH_INFO
	select BACKPORT_BPAUTO_ASN1_DECODER
	select BACKPORT_BPAUTO_PUBLIC_KEY
	select BACKPORT_BPAUTO_PKCS7
	#h-file linux/oid_registry.h
	#c-file lib/oid_registry.c

config BACKPORT_BPAUTO_PUBLIC_KEY
	bool
	depends on !BPAUTO_PUBLIC_KEY
	#h-file crypto/public_key.h

config BACKPORT_BPAUTO_ASN1_DECODER
	bool
	depends on !BPAUTO_ASN1_DECODER
	#h-file linux/asn1_decoder.h
	#c-file lib/asn1_decoder.c

config BACKPORT_BPAUTO_PKCS7
	bool
	depends on !BPAUTO_PKCS7
	#h-file crypto/pkcs7.h

config BACKPORT_BPAUTO_CRYPTO_LIB_ARC4
	bool
	depends on !BPAUTO_CRYPTO_LIB_ARC4

config BACKPORT_BPAUTO_BUILD_CRYPTO_LIB_ARC4
	bool
	depends on !BPAUTO_BUILD_CRYPTO_LIB_ARC4
	default y if BACKPORT_BPAUTO_CRYPTO_LIB_ARC4
	depends on !(CRYPTO_LIB_ARC4=y || CRYPTO_LIB_ARC4=m)
	#h-file crypto/arc4.h
	#c-file lib/crypto/arc4.c
